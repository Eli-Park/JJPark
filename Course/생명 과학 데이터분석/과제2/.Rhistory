rres
summary(rres)
par(mfrow=c(1,2),pch=1)
Residual <- rres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- rres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
df <- df.residual(rres)
MSerror <- deviance(rres)/df
LSD     <- LSD.test(rres, "factor(SR)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(SR)")
TUKEY
SCHEFFE <- scheffe.test(rres,"factor(SR)", group=TRUE, console=TRUE)
rres_2 <- aov(Size ~ factor(SR), data=data)
rres_2
summary(rres_2)
data <- as.data.frame(data)
#1
Perform <- c(14, 12, 13, 11, 17, 14, 11, 12, 14, 13, 11, 10
, 13, 13, 12, 12, 12, 10, 9, 8)
Additives <- c(2, 3, 4, 5, 1, 2, 4, 5, 1, 3, 4, 5, 1, 2, 3, 4,
1, 2, 3, 5)
Car <- c(1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
5, 5, 5, 5)
data <- cbind(Additives, Car, Perform)
data <- as.data.frame(data)
xtabs(data)
xtabs(data$Additives, data$Car, data$Perform)
xtabs(data$Additives)
?xtabs
xtabs(Perform=Additives + Car, data=data)
xtabs(Perform ~ Additives + Car, data=data)
str(data)
head(data)
xtabs(Perform ~ Additives + Car, data=data)
res  <- aov(Perform ~ factor(Additives) + factor(Car), data=data)
res
summary(res)
res_1 <- BIB.test(factor(Car), factor(Additives), Perform, console=TRUE, alpha = 0.05)
res  <- aov(Perform ~ factor(Car) + factor(Additives), data=data)
res
summary(res)
?BIB.test
?bib.test
res_1 <- BIB.test(factor(Car), factor(Additives), Perform, console=TRUE, alpha = 0.05)
#2
Method <- c("C", "B", "A", "D", "D", "C", "B", "A", "A", "D", "C", "B",
"B", "A", "D", "C")
Order <- rep(1:4, 4)
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Time <- c(10, 7, 5, 10, 14, 18, 10, 10, 7, 11, 11, 12, 8, 8, 8, 4)
data <- cbind(Order, Operator, Method, Time)
data <- as.data.frame(data)
data[,4] <- as.numeric(data[,4])
xtabs(Time ~ Order+ Operator + Method, data=data)
head(data)
#2
Method <- c("C", "B", "A", "D", "D", "C", "B", "A", "A", "D", "C", "B",
"B", "A", "D", "C")
Order <- rep(1:4, 4)
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Time <- c(10, 7, 5, 10, 14, 18, 10, 10, 7, 11, 11, 12, 8, 8, 8, 4)
data <- cbind(Order, Operator, Method, Time)
data <- as.data.frame(data)
data[,4] <- as.numeric(data[,4])
head(data)
time
Time
#2
Method <- c("C", "B", "A", "D", "D", "C", "B", "A", "A", "D", "C", "B",
"B", "A", "D", "C")
Order <- rep(1:4, 4)
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Time <- c(10, 7, 5, 10, 14, 18, 10, 10, 7, 11, 11, 12, 8, 8, 8, 4)
data <- cbind(Order, Operator, Method, Time)
head(data)
data <- as.data.frame(data)
head(data)
data[,4] <- as.numeric(data[,4])
head(data)
data <- cbind(Order, Operator, Method, Time)
data <- as.data.frame(data)
data[.4]
data[,4]
str(data)
data[,4] <- Time
head(data)
str(data)
xtabs(Time ~ Order+ Operator + Method, data=data)
head(data)
lres <- aov(Time ~ Order + Method + Operator  , data=data)
lres
summary(lres)
par(mfrow=c(1,2),pch=1)
Residual <- lres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- lres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
df <- df.residual(lres)
MSerror <- deviance(lres)/df
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
SCHEFFE <- scheffe.test(lres, "Method", group=TRUE, console=TRUE)
lfin <- aov(Time ~ Method + Operator  , data=data)
lfin
summary(lfin)
#3
Order <- c(rep(1:4,4))
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Method <- c("C", "B", "A", "D", "B", "C", "D", "A", "D", "A", "B", "C",
"A", "D", "C", "B")
Workpl <- c("b", "a", "d", "c", "c", "d", "a", "b", "d", "c", "b", "a",
"a", "b", "c", "d")
Time <- c(11, 8, 9, 9, 10, 12, 11, 8, 14, 10, 7, 18, 8, 12, 15, 6)
data <- cbind(Order, Operator, Method, Workpl, Time)
data <- as.data.frame(data)
data
data[,5] <- as.numeric(data[,5])
data
data[,5] <- Time
head(data)
glres <- aov(Time ~ Order + Method + Operator + Workpl, data=data)
glres
summary(glres)
par(mfrow=c(1,2),pch=1)
Residual <- res$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- res$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
Residual <- glres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- gres$fitted.values
Predicted <- glres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
lres <- aov(Time ~ factor(Order) + Method + factor(Operator)  , data=data)
lres
summary(lres)
str(data)
glres <- aov(Time ~ factor(Order) + Method + factor(Operator) + Workpl, data=data)
glres
summary(glres)
lres <- aov(Time ~ factor(Order) + Method + factor(Operator)  , data=data)
lres
summary(lres)
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
SCHEFFE <- scheffe.test(lres, "Method", group=TRUE, console=TRUE)
#2
Method <- c("C", "B", "A", "D", "D", "C", "B", "A", "A", "D", "C", "B",
"B", "A", "D", "C")
Order <- rep(1:4, 4)
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Time <- c(10, 7, 5, 10, 14, 18, 10, 10, 7, 11, 11, 12, 8, 8, 9, 14)
data <- cbind(Order, Operator, Method, Time)
data <- as.data.frame(data)
data[,4] <- Time
head(data)
str(data)
lres <- aov(Time ~ factor(Order) + Method + factor(Operator)  , data=data)
lres
summary(lres)
par(mfrow=c(1,2),pch=1)
Residual <- lres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- lres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
df <- df.residual(lres)
MSerror <- deviance(lres)/df
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
SCHEFFE <- scheffe.test(lres, "Method", group=TRUE, console=TRUE)
lres <- aov(Time ~ factor(Order) + Method + factor(Operator)  , data=data)
lres
summary(lres)
Residual <- lres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- lres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
SCHEFFE <- scheffe.test(lres, "Method", group=TRUE, console=TRUE)
#3
Order <- c(rep(1:4,4))
Method <- c("C", "B", "A", "D", "B", "C", "D", "A", "D", "A", "B", "C",
"A", "D", "C", "B")
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Workpl <- c("b", "a", "d", "c", "c", "d", "a", "b", "d", "c", "b", "a",
"a", "b", "c", "d")
Time <- c(11, 8, 9, 9, 10, 12, 11, 8, 14, 10, 7, 18, 8, 12, 15, 6)
data <- cbind(Order, Operator, Method, Workpl, Time)
data <- as.data.frame(data)
data[,5] <- Time
head(data)
glres <- aov(Time ~ factor(Order) + Method + factor(Operator) + Workpl, data=data)
glres
summary(glres)
par(mfrow=c(1,2),pch=1)
Residual <- glres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- glres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
#4
SR <- c(rep(seq(5, 20, 5),4))
Furnace <- c(rep(1,4), rep(2,4), rep(3,4), rep(4,4))
Size <- c(8, 14, 14, 17, 4, 5, 6, 9, 5, 6, 9, 3, 6, 9, 2, 6)
data <- cbind(SR, Furnace, Size)
data <- as.data.frame(data)
data[,3] <- Size
head(data)
rres <- aov(Size ~ factor(SR) + factor(Furnace)  , data=data)
rres
summary(rres)
qqnorm(Residual)
qqline(Residual)
Predicted <- rres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
df <- df.residual(rres)
MSerror <- deviance(rres)/df
LSD     <- LSD.test(rres, "factor(SR)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(SR)")
TUKEY
SCHEFFE <- scheffe.test(rres,"factor(SR)", group=TRUE, console=TRUE)
LSD     <- LSD.test(rres, "SR",console=TRUE)
Predicted <- rres$fitted.values
plot(Predicted, Residual, main="Residual Plot")
abline(h=0)
LSD     <- LSD.test(rres, "factor(SR)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(SR)")
TUKEY
SCHEFFE <- scheffe.test(rres,"factor(SR)", group=TRUE, console=TRUE)
rres_2 <- aov(Size ~ factor(SR), data=data)
rres_2
summary(rres_2)
rres_2 <- aov(Size ~ factor(Furnace), data=data)
rres_2
summary(rres_2)
Residual <- rres$residuals
qqnorm(Residual)
qqline(Residual)
par(mfrow=c(1,1),pch=1)
Residual <- rres$residuals
qqnorm(Residual)
qqline(Residual)
Predicted <- rres$fitted.values
Predicted
plot(Residual, SR, main="Residual Plot")
plot(Residual, SR, main="Residual VS Stirring Rate")
plot(Residual, Furnace, main = "Residual VS Furnace")
plot(Residual, factor(SR), main="Residual VS Stirring Rate")
plot(Residual, factor(Furnace), main = "Residual VS Furnace")
#(C)
plot(Residual, factor(SR), main="Residual VS Stirring Rate")
plot(Residual, factor(Furnace), main = "Residual VS Furnace")
#(C)
plot(Residual, factor(SR), main="Residual VS Stirring Rate", pch = 16)
plot(Residual, factor(Furnace), main = "Residual VS Furnace", pch = 16)
#(B)
par(mfrow=c(1,1),pch=1)
Residual <- rres$residuals
qqnorm(Residual)
qqline(Residual)
#(B)
par(mfrow=c(1,1),pch=1)
Residual <- rres$residuals
qqnorm(Residual)
qqline(Residual)
#(C)
plot(Residual, factor(SR), main="Residual VS Stirring Rate", pch = 16)
#(A)
rres <- aov(Size ~ SR + factor(Furnace)  , data=data)
rres
summary(rres)
#(C)
plot(Residual, SR, main="Residual VS Stirring Rate", pch = 16)
plot(Residual, factor(Furnace), main = "Residual VS Furnace", pch = 16)
#(C)
plot(Residual, SR, main="Residual VS Stirring Rate", pch = 16)
plot(Residual, factor(Furnace), main = "Residual VS Furnace", pch = 16)
#(C)
plot(Residual, factor(SR), main="Residual VS Stirring Rate", pch = 16)
plot(Residual, factor(Furnace), main = "Residual VS Furnace", pch = 16)
#(D)
LSD     <- LSD.test(rres, "factor(Furnace)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(Frunace)")
TUKEY   <- TukeyHSD(rres, "factor(Furnace)")
TUKEY
TUKEY   <- TukeyHSD(rres, "factor(Furnace)")
TUKEY
SCHEFFE <- scheffe.test(rres,"factor(Furnace)", group=TRUE, console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(Furnace)")
glres <- aov(Time ~ factor(Order) + Method + factor(Operator) + Workpl, data=data)
#2
Method <- c("C", "B", "A", "D", "D", "C", "B", "A", "A", "D", "C", "B",
"B", "A", "D", "C")
Order <- rep(1:4, 4)
Operator <- c(rep(1,4), rep(2, 4), rep(3, 4), rep(4, 4))
Time <- c(10, 7, 5, 10, 14, 18, 10, 10, 7, 11, 11, 12, 8, 8, 9, 14)
data <- cbind(Order, Operator, Method, Time)
data <- as.data.frame(data)
data[,4] <- Time
head(data)
str(data)
lres <- aov(Time ~ factor(Order) + Method + factor(Operator)  , data=data)
lres
summary(lres)
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
summary(lres)
#(D)
LSD     <- LSD.test(rres, "factor(Furnace)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(Furnace)")
TUKEY
#(D)
LSD     <- LSD.test(rres, "factor(Furnace)",console=TRUE)
12.74-5.78
chiq(6.96,6)
dchisq(6.96,6)
qchisq(6.96,6)
phisq(6.96,6)
16.56-5.78
phisq(0.05,2)
pchisq(0.05,2)
qchisq(0.05,2)
qchisq(0.95,2)
#Data Read
setwd("C:/Users/pkmon/Desktop/생과데1")
#DATA read
setwd("C:/Users/pkmon/Desktop/생과데 과제2")
guilt <- read.csv("Guilt.csv")
psycho <- read.csv("psycho.csv")
safety <- read.csv("safety.csv")
reading <- read.csv("reading.csv")
reading2 <- read.csv("reading2.csv")
#4-1
library("ISLR")
#1)
guilt <- guilt[order(guilt$imprison),]
guilt.freq <- cbind(guilt[1:4,4], guilt[5:8,4])
guilt.reside <- guilt[1:4, 1]
guilt.arrest <- guilt[1:4, 2]
str(guilt.reside)
str(guilt.arrest)
guilt.fit <- glm(guilt.freq ~ guilt.reside + guilt.arrest, data = guilt, family = binomial(link = "logit"))
summary(guilt.fit)
str(guilt.reside)
str(guilt.arrest)
summary(guilt.fit)
exp(guilt.fit$coefficients)
dchisq(0.5076,1)
1-dchisq(0.5076,1)
qchisq(0.5076,1)
pchisq(0.5076,1)
1-pchisq(0.5076,1)
guilt.fit
guilt.fit$effects
guilt.fit$rank
guilt.fit$terms
guilt.fit$xlevels
#4-5
library("VGAM")
head(psycho)
psy.fit <- vglm(ordered(degree)~factor(class)+incident, data = psycho, family = cumulative(parallel=TRUE))
summary(psy.fit)
psy.fit1 <- vglm(ordered(degree)~factor(class)+incident, data = psycho, family = cumulative)
summary(psy.fit1)
psy.fit <- vglm(ordered(degree)~factor(class)+incident, data = psycho, family = cumulative(parallel=TRUE))
summary(psy.fit)
summary(psy.fit1)
#4-7
str(safety)
fit.safety = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce + seatbelt:death +
bounce:death + seatbelt:bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce + seatbelt:death +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
summary(fit.safety)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce + seatbelt:death +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce + seatbelt:death , family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:death +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:death +
, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:death +
, family=poisson(link=log), data=safety)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:death
, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death  +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce +
, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death, family=poisson(link=log), data=safety)
summary(fit.safety1)
fit.safety1 = glm(obs ~ seatbelt + bounce + death + seatbelt:bounce + seatbelt:death +
bounce:death, family=poisson(link=log), data=safety)
summary(fit.safety1)
safety1 <- safety[order(safety$death),]
death.freq <- cbind(safety1[1:4,4], safety1[5:8,4])
seatf <- safety1[1:4,1]
bouncef <- safety1[1:4,2]
safe.logit <- glm(death.freq ~ factor(seatf) + factor(bouncef), data = safety1, family = binomial(link = "logit"))
summary(safe.logit)
#4-9
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type + time:gender:type, family=poisson(link=log), data=reading)
summary(fit.reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
, family=poisson(link=log), data=reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type
, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender +
gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:type +
gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:type +
gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) +gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type + time:gender:type, family=poisson(link=log), data=reading1)
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type + time:gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type
, family=poisson(link=log), data=reading2)
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type
, family=poisson(link=log), data=reading2)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender +
gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading1)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender +
gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:type +
gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender, family=poisson(link=log), data=reading2)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender, family=poisson(link=log), data=reading2)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) +gender:type, family=poisson(link=log), data=reading2)
summary(fit.reading1)
qchisq(0.95,2)
#4-9
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type + time:gender:type, family=poisson(link=log), data=reading)
summary(fit.reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type
, family=poisson(link=log), data=reading)
summary(fit.reading1)
reading <- read.csv("reading.csv")
#4-9
fit.reading = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type +
gender:type + time:gender:type, family=poisson(link=log), data=reading)
summary(fit.reading)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender + time:type
, family=poisson(link=log), data=reading)
summary(fit.reading1)
fit.reading1 = glm(obs ~ factor(time) + factor(gender) + factor(type) + time:gender +
gender:type, family=poisson(link=log), data=reading)
summary(fit.reading1)
