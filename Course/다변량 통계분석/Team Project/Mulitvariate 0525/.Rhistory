min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("a", "b", "c"))
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.err","X2.err","X3.err","X4.err","X5.err","X6.err"))
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(b)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(b)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(c)
model1 <- specifyModel()
options(fit.indices=c("GFI", "AGFI", "RMSEA", "AIC", "BIC", "CAIC"))
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
qchisq(0.05,3)
qchisq(0.95,3)
#(d)
pca1 <- princomp(cov=AT, retx=T, center=T, scale.=T)
pca1
summary(pca1)
plot(pca1$sdev, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
loading <- eg$vectors%*%sqrt(diag(eg$values))
loading[,1:2]
##6.6
gov <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/GOVERNMENT_1.txt", fill =T, col.names = paste("X", 1:6)))
gov[upper.tri(gov)] <- t(gov)[upper.tri(gov)]
dimnames(gov) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
corrplot(gov)
#PCA
X <- as.matrix(gov)
pca.gov <- eigen(X)
t(eigen(X)$vectors)%*%eigen(X)$vectors
round(pca.gov$values, 2)
loadings.gov <- pca.gov$vectors %*% sqrt(diag(pca.gov$values))
apply(round(loadings.gov,2)**2, 2, sum)
cm.2.gov <- apply(loadings.gov[,1:2]**2, 2, sum)
sum(round(cm.2.gov, 2))/6
pca <- princomp(covmat = X)
summary(pca)
plot(pca$sdev**2, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
#EFA
efa1 <- factanal(cov=gov, factors=3,rotation="varimax")
communality <- apply(efa1$loadings**2, 1, sum) ; communality
efa2 <- factanal(cov=gov, factors=2,rotation="varimax")
communality <- apply(efa2$loadings**2, 1, sum) ; communality
summary(efa2)
efa2 <- factanal(cov=gov, factors=2,rotation="varimax")
summary(efa2)
efa2
communality <- apply(efa2$loadings**2, 1, sum) ; communality
#CFA
model1 <- specifyModel()
cfa1 <- sem(model1, S=gov, N=100, optimizer=optimizerOptim)
summary(cfa1)
cfa1
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
loadings.gov <- pca.gov$vectors %*% sqrt(diag(pca.gov$values))
loadings.gov
#(c)
gov1 <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/GOVERNMENT_2.txt", fill =T, col.names = paste("X", 1:6)))
gov1[upper.tri(gov1)] <- t(gov1)[upper.tri(gov1)]
dimnames(gov1) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
cfa2 <- sem(model1, S=gov1, N=100)
summary(cfa2)
#6.8
cog <- read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/COGNITION.txt")
cog <- cog[,-1]
temp<-0
rows<-numeric()
for(i in 1:201){
if(sum(cog[i,]==".")>=1) {
temp <- temp+1
rows[temp] <- i
}
}
cog <- cog[-rows,]
for(i in 1:18){
cog[,i] <- as.numeric(cog[,i])
}
#(a)
cov_cog <- cov(cog)
dimnames(cov_cog) <- list(paste("X", 1:18, sep = ""),paste("X", 1:18, sep = ""))
corrplot(cor(cov_cog))
model1 <- specifyModel()
cfa3 <- sem(model1, S=cov_cog, N=195)
summary(cfa3)
pathDiagram(cfa3, style="ram", ignore.double = FALSE, edge.labels="values")
a<-sum(cfa3$coeff[1:18])
b<-sum(cfa3$coeff[19:36]^2)
pc2 <- a^2/(a^2+b)
pc2
#(b)
solve(cor(cog))%*%matrix(cfa3$coeff[1:18],18,1)
cfa3$coeff[1:18]
time7_2 = c(0:15 , NA)
death7_2 = c(82,30,27,22,26,25,20,11,14,13,5,5,5,2,3,3)
censor7_2 = c(0,8,8,7,7,28,31,32,24,27,22,23,18,9,7,11)
sur7_2 = lifetab(tis = time7_2 , ninit = 555 , nlost = censor7_2, nevent = death7_2)
install.packages("KMsurv")
library(KMsurv)
plot(stepfun(x=1:15, y = sur7_2$surv) , pch="", main = "Survival Curve of ex7_2",
ylab = "Survival Probability", xlab="Time")
sur7_2 = lifetab(tis = time7_2 , ninit = 555 , nlost = censor7_2, nevent = death7_2)
sur7_2
plot(stepfun(x=1:15, y = sur7_2$surv) , pch="", main = "Survival Curve of ex7_2",
ylab = "Survival Probability", xlab="Time")
#7-3
time7.3 = c(2,4,5,10,10,12,12,14,14,15,16,18,19,23,25,26,27,30,31,34,35,37,38,39,42,43,46,47,49,50,53,54)
censor7.3 = c(1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2,1,1,2,2,1,2,1,1,2,2)
so7.3 = Surv(time7.3,censor7.3==1)
survival7.3 = survfit(so7.3~1)
plot(survival7.3 , conf.int = F, mark=1 , main = "Survival Curve of ex7.3")
legend(45,1 , legend="censored", pch=1)
install.packages("survival")
library(survival)
censor7.3 = c(1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2,1,1,2,2,1,2,1,1,2,2)
so7.3 = Surv(time7.3,censor7.3==1)
survival7.3 = survfit(so7.3~1)
plot(survival7.3 , conf.int = F, mark=1 , main = "Survival Curve of ex7.3")
legend(45,1 , legend="censored", pch=1)
abline(h=0.5, v=31, lty=2, col=2)
summary(survival7.3)
#7-4
time7.4 = c(1,2,5,5,5,7,9,11,11,13,13,16,20,21,22,22,31,33,37,43,
1,3,4,4,5,7,7,9,9,14,17,19,27,30,41)
censor7.4 = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,2,2,1,
1,1,1,1,1,1,1,1,1,2,1,2,2,2,2)
group7.4 = c(rep("A",20) , rep("B",15))
data7.4 = data.frame(time7.4 , censor7.4 , group7.4)
so7.4 = Surv(time7.4 , censor7.4==1)
survival7.4 = survfit(so7.4~group7.4)
plot(survival7.4, lty=c(1,2) , mark=1 , main = "Survival time of ex7.4" , xlab="time"
,ylab="survival distribution function")
legend(35,1.0 , legend=c("A","B"), lty=c(1,2) , title="Group", bty="n")
legend(35,0.75 , legend="censored" , pch=1, bty="n")
survdiff(so7.4~group7.4)
#7-6
time7_6 = c(18,9,28,31,39,19,45,6,8,15,23,28,7,12,9,8,2,26,10,4,3,4,18,8,3,14,3,13,13,35)
censor7_6 = c(1,1,2,1,2,2,2,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2)
sur7_6 = Surv(time7_6, censor7_6==1)
age7_6 = c(rep(0,13),rep(1,17))
marrow7_6 = c(0,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,1,0,1,1,0)
coxph(sur7_6~age7_6+marrow7_6, method="breslow")
#7-6
time7_6 = c(18,9,28,31,39,19,45,6,8,15,23,28,7,12,9,8,2,26,10,4,3,4,18,8,3,14,3,13,13,35)
censor7_6 = c(1,1,2,1,2,2,2,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2)
sur7_6 = Surv(time7_6, censor7_6==1)
age7_6 = c(rep(0,13),rep(1,17))
marrow7_6 = c(0,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,1,0,1,1,0)
coxph(sur7_6~age7_6+marrow7_6, method="breslow")
?coxph
#cluster = 2
library(tidyverse)
library(GGally)
ggpairs(f[,36:45], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4))
f <- as.data.frame(factorscores.s)
factorscores.s <- scale(factorscores)
factorscores <- cbind(efa.music$scores, efa.movies$scores, efa.hobbies$scores, efa.phobias$scores, health.score, efa.personality$scores, efa.spending$scores)
setwd("C:/Users/pkmon/Desktop/MULTIV~3")
### Multivariate_JW ###
complete.data <- read.csv("newresponse_0523.csv", header = T)
### DATA (150 col) ###
complete.data.a <- complete.data[,1:140] ## subjective
complete.data.b <- complete.data[,141:150] ## demographics
### PCA ###
music <- complete.data[,1:19]
movies <- complete.data[,20:31]
hobbies <- complete.data[,32:63]
phobias <- complete.data[,64:73]
health <- complete.data[,74:76]
personality <- complete.data[,77:133]
spending <- complete.data[,134:140]
## music ##
pca.music <- princomp(music)
plot(c(1:length(music)), pca.music$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.music) #4PC
## movies ##
pca.movies <- princomp(movies)
plot(c(1:length(movies)), pca.movies$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.movies) #3PC
## hobbies ##
pca.hobbies <- princomp(hobbies)
plot(c(1:length(hobbies)), pca.hobbies$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.hobbies) #7PC
## phobias ##
pca.phobias <- princomp(phobias)
plot(c(1:length(phobias)), pca.phobias$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.phobias) #3PC
## personality ##
pca.personality <- princomp(personality)
plot(c(1:length(personality)), pca.personality$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.personality) #13PC
## spending ##
pca.spending <- princomp(spending)
plot(c(1:length(spending)), pca.spending$sdev, type="b", main="Scree Plot",
xlab="Component Number", ylab="Eigenvalues")
summary(pca.spending) #2PC
## music ##
efa.music <- factanal(music, factors=4, rotation="varimax", scores="regression"); efa.music$scores
## movies ##
efa.movies <- factanal(movies, factors=3, rotation="varimax", scores="regression"); efa.movies$scores
## hobbies ##
efa.hobbies <- factanal(hobbies, factors=7, rotation="varimax", scores="regression"); efa.hobbies$scores
## phobias ##
efa.phobias <- factanal(phobias, factors=3, rotation="varimax", scores="regression"); efa.phobias$scores
## health ## -> scaling?
health.score <- scale(health); health.score
## personality ##
efa.personality <- factanal(personality, factors=13, rotation="varimax", scores="regression"); efa.personality$scores
## spending ##
efa.spending <- factanal(spending, factors=2, rotation="varimax", scores="regression"); efa.spending$scores
factorscores <- cbind(efa.music$scores, efa.movies$scores, efa.hobbies$scores, efa.phobias$scores, health.score, efa.personality$scores, efa.spending$scores)
colnames(factorscores) <- c("mus.quite", "mus.rock", "mus.noisy", "mus.pop",
"mov.fantasy", "mov.action", "mov.horror",
"hob.alone", "hob.science", "hob.liberalarts", "hob.IT", "hob.gossip", "hob.sports", "hob.math",
"pho.wild", "pho.animal", "pho.dog",
"heal.smoke", "heal.drink", "heal.lifestyle",
"per.social", "per.lonely", "per.work", "per.kind", "per.reliability", "per.HR", "per.angry",
"per.decisive&religious", "per.hypochondria", "per.family", "per.selfcriticism", "per.charity", "per.judgement",
"spend.on", "spend.at")
### Clustering ###
library("cluster")
factorscores.s <- scale(factorscores)
library("NbClust")
str(factorscores.s)
n=nrow(factorscores.s)
withinss = pseudof = NULL
for(i in 1:20){
km<-kmeans(factorscores.s, centers=i)
withinss<-c(withinss, km$tot.withinss)
f<-(km$betweenss/(i-1))/(km$tot.withinss/(n-i))
pseudof<-c(pseudof,f)
}
par(mfrow=c(1,1))
plot(pseudof, type="b", main='Pseudo-F plot')
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 4)
#cluster = 2
library(tidyverse)
library(GGally)
factorscores.k <- kmeans(factorscores.s, 2, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 2)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4))
ggpairs(f[,5:7], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Movie
ggpairs(f[,8:14], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4))
ggpairs(f[,15:17], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Phobia
ggpairs(f[,18:20], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4))
ggpairs(f[,21:33], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #
factorscores.k <- kmeans(factorscores.s[,1:17], 2, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 2)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Music
ggpairs(f[,5:7], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Movie
ggpairs(f[,8:14], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Hobby
A<-aggregate(f[, 1:35], list(f$cluster), mean)
A
A<-aggregate(f[, 1:35], list(f$cluster), mean)
B<-aggregate(f[, 1:35], list(f$cluster), var)
B
t.test(A,B)
?t.test
factorscores.k <- kmeans(factorscores.s[,1:17], 4, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 4)
factorscores.k <- kmeans(factorscores.s, 4, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 4)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Music
A<-aggregate(f, list(f$cluster), mean)
A
ggpairs(f[,5:7], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Movie
ggpairs(f[,8:14], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Hobby
##How many variables?
#Using all variables or ~phobia
factorscores.k <- kmeans(factorscores.s, 2, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
factorscores.k <- kmeans(factorscores.s[,1:17], 2, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
nb <- NbClust(factorscores.s[,1:17], diss=NULL, distance = "euclidean",
min.nc=2, max.nc=6, method = "kmeans",
index = "all", alphaBeale = 0.1) ## 2 clusters
factorscores.k <- kmeans(factorscores.s[,1:17], 3, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
par(mfrow=c(1,1))
factorscores.k <- kmeans(factorscores.s[,1:17], 3, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
?clusplot
library(rgl)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster)
##How many variables?
#Using all variables or ~phobia
factorscores.k <- kmeans(factorscores.s, 2, nstart = 100); factorscores.k
clusplot(factorscores.s, factorscores.k$cluster, color=TRUE, labels=4)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
plot3d(pc$scores[,1:3], col=f$cluster)
factorscores.k <- kmeans(factorscores.s, 2, nstart = 100); factorscores.k
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 2)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
A<-aggregate(f[, 1:35], list(f$cluster), mean)
B<-aggregate(f[, 1:35], list(f$cluster), var)
## or ~phobia
nb <- NbClust(factorscores.s[,1:17], diss=NULL, distance = "euclidean",
min.nc=2, max.nc=6, method = "kmeans",
index = "all", alphaBeale = 0.1) ## 2 clusters
par(mfrow=c(1,1))
factorscores.k <- kmeans(factorscores.s[,1:17], 3, nstart = 100); factorscores.k
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster)
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 3)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Music
ggpairs(f[,36:45], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Demographic
ggpairs(f[,5:7], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Movie
ggpairs(f[,8:14], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Hobby
factorscores.s <- scale(factorscores)
library("NbClust")
str(factorscores.s)
n=nrow(factorscores.s)
withinss = pseudof = NULL
for(i in 1:20){
km<-kmeans(factorscores.s, centers=i)
withinss<-c(withinss, km$tot.withinss)
f<-(km$betweenss/(i-1))/(km$tot.withinss/(n-i))
pseudof<-c(pseudof,f)
}
par(mfrow=c(1,1))
plot(pseudof, type="b", main='Pseudo-F plot')
## or ~phobia
nb <- NbClust(factorscores.s[,1:17], diss=NULL, distance = "euclidean",
min.nc=2, max.nc=6, method = "kmeans",
index = "all", alphaBeale = 0.1) ## 2 clusters
par(mfrow=c(1,1))
factorscores.k <- kmeans(factorscores.s[,1:17], 3, nstart = 100); factorscores.k
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster)
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 3)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Music
ggpairs(f[,8:14], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Hobby
plot(A[,1])
barplot(A[,1])
barplot(A[,1], title=colnames(A)[1])
barplot(A[,1], main=colnames(A)[1])
colnames(A)
barplot(A[,2], main=colnames(A)[2])
str(A)
for(i in 2:36) {
ggplot(A, aes(x=Group.1, y=A[,i]))+
geom_bar()
}
ggplot(A, aes(x=Group.1, y=A[,2]))+
geom_bar()
ggplot(A, aes(x=Group.1, y=pho.animal))+
geom_bar()
ggplot(A, aes(x=Group.1))+
geom_bar()
ggplot(A, aes(x=Group.1, y=per.kind))+
geom_bar()
for(i in 2:36) {
barplot(A[,i])
}
colnames(A)[2]
C<-colnames(A)
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
for(i in 2:36) {
par(mfrow=c(6,6))
barplot(A[,i], main = C[i])
}
for(i in 2:36) {
par(mfrow=c(3,3))
barplot(A[,i], main = C[i])
}
par(mfrow=c(6,6))
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
par(mfrow=c(4,4))
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
par(mfrow=c(3,3))
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
for(i in 2:36) {
barplot(A[,i], xlab=c("C1", "C2"),main = C[i])
}
factorscores.k <- kmeans(factorscores.s, 2, nstart = 100); factorscores.k
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster) ###clus plot의 3d 버전
d.complete.data.a <- dist(complete.data.a, method = "euclidean")
plot(complete.data.a.ward <- hclust(d.complete.data.a, method="ward.D"), hang=-1,
main="Cluster Dendrogram: Ward??s Method")
rect.hclust(complete.data.a.ward, 2)
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
ggpairs(f[,1:4], aes(colour = as.factor(factorscores.k$cluster), alpha = 0.4)) #Music
A<-aggregate(f[, 1:35], list(f$cluster), mean); A
B<-aggregate(f[, 1:35], list(f$cluster), var); B
par(mfrow=c(3,3))
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
par(mfrow=c(1,1))
par(mfrow=c(1,1))
factorscores.k <- kmeans(factorscores.s[,1:17], 3, nstart = 100); factorscores.k
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
pc <- princomp(complete.data.a)
plot3d(pc$scores[,1:3], col=f$cluster) #잘 구분이 된 것이 보인다.
f <- as.data.frame(factorscores.s)
f <- cbind(f, complete.data.b, cluster = factorscores.k$cluster)
A<-aggregate(f[, 1:35], list(f$cluster), mean); A
B<-aggregate(f[, 1:35], list(f$cluster), var); B
C<-colnames(A)
par(mfrow=c(3,3))
for(i in 2:36) {
barplot(A[,i], main = C[i])
}
