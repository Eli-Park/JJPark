summary(lres)
LSD     <- LSD.test(lres, "Method" ,console=TRUE)
TUKEY   <- TukeyHSD(lres, "Method")
TUKEY
summary(lres)
#(D)
LSD     <- LSD.test(rres, "factor(Furnace)",console=TRUE)
TUKEY   <- TukeyHSD(rres, "factor(Furnace)")
TUKEY
#(D)
LSD     <- LSD.test(rres, "factor(Furnace)",console=TRUE)
# ex6.1
lam<-c(0.725,0.65,0.58,0.605,0.81)
theta<-c(.474,.578,.664,.634,.344)
sum(lam^2)/(sum(lam^2)+sum(theta^2))
# 6.2
lam <- c(0.78, 0.69, 0.73, 0.75, 0.84, 0.72)
cor <- 0.36
corr <- 0.36
#(a)
corx2x5 <- lam[2]*corr*lam[5]
#(a)
lam[2]*corr*lam[5]
# 6.4
AT <- read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/ATTITUDE.txt")
# 6.4
AT <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/ATTITUDE.txt", fill =T, col.names = paste("X", 1:6)))
AT[upper.tri(AT)] <- t(AT)[upper.tri(AT)]
AT
###############################################################################
# Install MVA package
###############################################################################
install.packages("MVA")
library("tools")
library("HSAUR2")
library("MVA")
dimnames(AT) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
AT
library(sem)
install.packages("sem")
library("sem")
model1 <- specifyModel()
X2 <-> X2, theta22, NA
X3 <-> X3, theta33, NA
X4 <-> X4, theta44, NA
X5 <-> X5, theta55, NA
X5 <-> X5, theta55, NA
X6 <-> X5, theta66, NA
A1 <-> A1, NA, 1
A2 <-> A2, NA, 1
A1 <-> A2, NA
## After loading the sem package, we then translate the CFA model
library(sem)
model1 <- specifyModel()
model1 <- specifyModel()
library("sem")
model1 <- specifyModel()
install.packages("DiagrammeR")
library("DiagrammeR")
#z
?sem
cfa1.fit <- sem(model1, AT, 100)
#z
cfa1.fit <- sem(model1, S= AT, N=100)
model1 <- specifyModel()
cfa1.fit <- sem(model1, S= AT, N=100)
summary(cfa1.mtmm.fit)
summary(cfa1.fit)
#z
cfa1.fit <- sem(model1, S= AT, N=100)
summary(cfa1.fit)
model1 <- specifyModel()
library("sem")
model1 <- specifyModel()
cfa1.fit <- sem(model1, S= AT, N=100)
#(A)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S= AT, N=100)
AT
#Model
cfa1 <- sem(model1, AT, N=100)
cfa1$n
cfa1$var.names
cfa1$ram
model1 <- specifyModel()
cfa1 <- sem(model1, AT, N=100)
summary(cfa1)
#Model
cfa1 <- sem(model1, S=AT, N=100)
#(A)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("store.appearance", "product.assortment"),
same.rank=c("AL", "PL", "AS", "PS", "AD", "PD"),
max.rank=c("likert", "stapel", "semantic"))
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("a", "b", "c"))
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
#(c)
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
cfa1$criterion
#(d)
pca1 <- princomp(cov=AT, retx=T, center=T, scale.=T)
pca1
summary(pca1)
autoplot(pca1,  data = AT, loadings = TRUE, loadings.label=TRUE)
library("ggfortify")
autoplot(pca1,  data = AT, loadings = TRUE, loadings.label=TRUE)
plot(pca1$, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
plot(pca1$sdev, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
eg <- eigen(AT)
loading <- eg$vectors%*%sqrt(eg$values)
loading
loading <- eg$vectors%*%sqrt(diag(eg$values))
loading
loading[,1:2]
##6.6
gov <- data.matrix(read.table("C:/Users/pkmon/Desktop/다변량1/DATA/Ch04/GOVERNMENT_1.txt", fill =T, col.names = paste("X", 1:6)))
##6.6
gov <- data.matrix(read.table("C:/Users/pkmon/Desktop/다변량/DATA/Ch04/GOVERNMENT_1.txt", fill =T, col.names = paste("X", 1:6)))
gov[upper.tri(gov)] <- t(gov)[upper.tri(gov)]
##6.6
gov <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/GOVERNMENT_1.txt", fill =T, col.names = paste("X", 1:6)))
gov[upper.tri(gov)] <- t(gov)[upper.tri(gov)]
gov
#PCA
X <- as.matrix(gov)
pca.gov <- eigen(X)
t(eigen(X)$vectors)%*%eigen(X)$vectors
round(pca.gov$values, 2)
loadings.gov <- pca.gov$vectors %*% sqrt(diag(pca.gov$values))
apply(round(loadings.gov,2)**2, 2, sum)
cm.2.gov <- apply(loadings.gov[,1:2]**2, 2, sum)
sum(round(cm.2.gov, 2))/6
pca.gov$vectors
pca <- prcomp(covmat = X)
summary(pca)
pca <- princomp(covmat = X)
summary(pca)
round(cumsum(pca.gov$values/sum(pca.gov$values)), 2)
var = eigen(X)$vectors
var
plot(var, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
plot(pca$sdev**2, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
library("tools")
library("HSAUR2")
library("MVA")
library("ggfortify")
library("corrplot")
#EFA
efa1 <- factanal(X, factors=3,rotation="varimax")
#EFA
efa1 <- factanal(gov, factors=3,rotation="varimax")
efa1
gov
solve(gov)
#EFA
efa1 <- factanal(cov=gov, factors=3,rotation="varimax")
efa1
communality <- apply(efa1$loadings**2, 1, sum) ; communality
efa2 <- factanal(cov=gov, factors=2,rotation="varimax")
communality <- apply(efa2$loadings**2, 1, sum) ; communality
corrplot(gov)
gov
summary(cfa1)
?sem
##################
# EXERCISE 6.6 ###
##################
library(sem)
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
cfa_att<-cfa(model1, sample.cov = AT, sample.nobs = 100)
corrplot(gov)
dimnames(gov) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
corrplot(gov)
#CFA
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
#model
cfa1 <- sem(model1, S=gov, N=100)
summary(cfa1)
cfa1
#model
cfa1 <- sem(model1, S=gov, N=100, optimizer=optimizerOptim)
summary(cfa1)
#Model
options(fit.indices=c("GFI", "AGFI", "RMSEA", "AIC", "BIC", "CAIC"))
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
#model
cfa1 <- sem(model1, S=gov, N=100, optimizer=optimizerOptim)
summary(cfa1)
cfa1
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
)
gov
#model
cfa1 <- sem(model1, S=gov, optimizer=optimizerOptim)
#(c)
gov1 <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/GOVERNMENT_2.txt", fill =T, col.names = paste("X", 1:6)))
gov1[upper.tri(gov1)] <- t(gov1)[upper.tri(gov1)]
dimnames(gov1) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
gov1
cfa2 <- sem(model1, S=gov1, N=100)
summary(cfa2)
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
#6.8
cog <- read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/COGNITION.txt", sep=" ")
?read.table
#6.8
cog <- read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/COGNITION.txt")
cog
cog <- cog[,-1]
cog
str(cog)
sum(cog==".")
for(i in 1:201){
cog[i,]==".")
}
for(i in 1:201){
cog[i,]=="."
}
for(i in 1:201){
print(cog[i,]==".")
}
temp<-numeric()
rows<-numeric()
temp<-0
rows<-numeric()
for(i in 1:201){
if(cog[i,]==".") {
temp <- temp+1
rows[temp] <- i
}
}
rows
temp
if(sum(cog[i,]==".")>0) {
temp <- temp+1
rows[temp] <- i
}
temp
sum(cog[12,]==".")>0
for(i in 1:201){
if(sum(cog[i,]==".")>=0) {
temp <- temp+1
rows[temp] <- i
}
}
temp
if(sum(cog[i,]==".")>=1) {
temp <- temp+1
rows[temp] <- i
}
temp<-0
rows<-numeric()
for(i in 1:201){
if(sum(cog[i,]==".")>=1) {
temp <- temp+1
rows[temp] <- i
}
}
temp
rows
cog <- cog[-rows,]
cog
#(a)
corrplot(cog)
corrplot(cor(cog))
for(i in 1:18){
cog[,i] <- as.numeric(cog[,i])
}
corrplot(cor(cog))
#(a)
cov_cog <- cov(cog)
cov_cog
dimnames(cov_cog) <- list(paste("X", 1:18, sep = ""),paste("X", 1:18, sep = ""))
cov_cog
corrplot(cor(cov_cog))
A1 -> X1, lam1, NA
A1 -> X2, lam1, NA
model1 <- specifyModel()
pathDiagram(cfa2, style="ram", ignore.double = FALSE, edge.labels="values")
#model test
cfa3 <- sem(model1, S=cov_cog, N=195)
summary(cfa3)
model1 <- specifyModel()
cfa3 <- sem(model1, S=cov_cog, N=195)
summary(cfa3)
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa3, style="ram", ignore.double = FALSE, edge.labels="values")
cfa3$coeff
b<-sum(cfa3$coeff[19:36])
b<-sum(cfa3$coeff[19:36]^2)
pc2 <- a^2/(a^2+b)
a<-sum(cfa3$coeff[1:18])
b<-sum(cfa3$coeff[19:36]^2)
pc2 <- a^2/(a^2+b)
pc2
#(b)
solve(cor(cog))%*%diag(cfa3$coeff[1:18])
#(b)
solve(cor(cog))%*%(cfa3$coeff[1:18])
#(b)
solve(cor(cov_cog))%*%(cfa3$coeff[1:18])
#(b)
solve(cor(cog))%*%t(cfa3$coeff[1:18])
t(cfa3$coeff[1:18])
#(b)
solve(cor(cog))%*%matrix(cfa3$coeff[1:18],18,1)
cor(cog)
cor(cov_cog)
#(b)
solve(cor(cov_cog))%*%matrix(cfa3$coeff[1:18],18,1)
cor(cov_cog)
solve(cor(cov_cog))
#(b)
solve(cor(cog))%*%matrix(cfa3$coeff[1:18],18,1)
cfa3$coeff[1:18]
# 6.1
lam<-c(0.725,0.65,0.58,0.605,0.81)
theta<-c(.474,.578,.664,.634,.344)
sum(lam^2)/(sum(lam^2)+sum(theta^2))
# 6.2
lam <- c(0.78, 0.69, 0.73, 0.75, 0.84, 0.72)
corr <- 0.36
#(a)
lam[2]*corr*lam[5]
# 6.4
AT <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/ATTITUDE.txt", fill =T, col.names = paste("X", 1:6)))
AT[upper.tri(AT)] <- t(AT)[upper.tri(AT)]
dimnames(AT) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
AT
#(A)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
library("DiagrammeR")
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("a", "b", "c"))
pathDiagram(cfa1, style="ram", ignore.double = FALSE, edge.labels="values")
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.err","X2.err","X3.err","X4.err","X5.err","X6.err"))
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(b)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(b)
library("sem")
model1 <- specifyModel()
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
#(c)
model1 <- specifyModel()
options(fit.indices=c("GFI", "AGFI", "RMSEA", "AIC", "BIC", "CAIC"))
cfa1 <- sem(model1, S=AT, N=100)
summary(cfa1)
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
qchisq(0.05,3)
qchisq(0.95,3)
#(d)
pca1 <- princomp(cov=AT, retx=T, center=T, scale.=T)
pca1
summary(pca1)
plot(pca1$sdev, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
loading <- eg$vectors%*%sqrt(diag(eg$values))
loading[,1:2]
##6.6
gov <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/GOVERNMENT_1.txt", fill =T, col.names = paste("X", 1:6)))
gov[upper.tri(gov)] <- t(gov)[upper.tri(gov)]
dimnames(gov) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
corrplot(gov)
#PCA
X <- as.matrix(gov)
pca.gov <- eigen(X)
t(eigen(X)$vectors)%*%eigen(X)$vectors
round(pca.gov$values, 2)
loadings.gov <- pca.gov$vectors %*% sqrt(diag(pca.gov$values))
apply(round(loadings.gov,2)**2, 2, sum)
cm.2.gov <- apply(loadings.gov[,1:2]**2, 2, sum)
sum(round(cm.2.gov, 2))/6
pca <- princomp(covmat = X)
summary(pca)
plot(pca$sdev**2, type ="b", main="Scree plot", xlab = "Factors", ylab = "Eigen Value")
abline(h=1, col = "red")
#EFA
efa1 <- factanal(cov=gov, factors=3,rotation="varimax")
communality <- apply(efa1$loadings**2, 1, sum) ; communality
efa2 <- factanal(cov=gov, factors=2,rotation="varimax")
communality <- apply(efa2$loadings**2, 1, sum) ; communality
summary(efa2)
efa2 <- factanal(cov=gov, factors=2,rotation="varimax")
summary(efa2)
efa2
communality <- apply(efa2$loadings**2, 1, sum) ; communality
#CFA
model1 <- specifyModel()
cfa1 <- sem(model1, S=gov, N=100, optimizer=optimizerOptim)
summary(cfa1)
cfa1
pathDiagram(cfa1, style="traditional",
ignore.double = FALSE, error.nodes = TRUE,
edge.labels="values",
min.rank=c("A1", "A2"),
same.rank=c("X1", "X2", "X3", "X4", "X5", "X6"),
max.rank=c("X1.error","X2.error","X3.error","X4.error","X5.error","X6.error"))
loadings.gov <- pca.gov$vectors %*% sqrt(diag(pca.gov$values))
loadings.gov
#(c)
gov1 <- data.matrix(read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch06/GOVERNMENT_2.txt", fill =T, col.names = paste("X", 1:6)))
gov1[upper.tri(gov1)] <- t(gov1)[upper.tri(gov1)]
dimnames(gov1) <- list(paste("X", 1:6, sep=""), paste("X", 1:6, sep=""))
cfa2 <- sem(model1, S=gov1, N=100)
summary(cfa2)
#6.8
cog <- read.table("C:/Users/pkmon/Desktop/19-1/다변량/DATA/Ch04/COGNITION.txt")
cog <- cog[,-1]
temp<-0
rows<-numeric()
for(i in 1:201){
if(sum(cog[i,]==".")>=1) {
temp <- temp+1
rows[temp] <- i
}
}
cog <- cog[-rows,]
for(i in 1:18){
cog[,i] <- as.numeric(cog[,i])
}
#(a)
cov_cog <- cov(cog)
dimnames(cov_cog) <- list(paste("X", 1:18, sep = ""),paste("X", 1:18, sep = ""))
corrplot(cor(cov_cog))
model1 <- specifyModel()
cfa3 <- sem(model1, S=cov_cog, N=195)
summary(cfa3)
pathDiagram(cfa3, style="ram", ignore.double = FALSE, edge.labels="values")
a<-sum(cfa3$coeff[1:18])
b<-sum(cfa3$coeff[19:36]^2)
pc2 <- a^2/(a^2+b)
pc2
#(b)
solve(cor(cog))%*%matrix(cfa3$coeff[1:18],18,1)
cfa3$coeff[1:18]
getwd()
setwd("C:/Users/pkmon/Desktop/Multivariate Team")
dat <- read.csv("Accidents_2015.csv")
head(dat)
str(dat)
View(dat)
names(dat)
View(dat)
setwd("C:/Users/pkmon/Desktop/Multivariate Team")
